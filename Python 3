currentPieces={}
bpieces = [0]
wpieces = [0]

def sumPieces(pieces):
    if 'bk' not in pieces.keys() or 'wk' not in pieces.keys():
        print('Please enter appropriate number of kings onto board.')
        exit()
    for k in pieces:
        if k == 'bp' or k == 'bk' or k == 'bq' or k == 'br' or k == 'bb' or k =='bn':
            bpieces[0] += pieces[k]
        if k == 'wp' or k == 'wk' or k == 'wq' or k == 'wr' or k == 'wb' or k =='wn':
            wpieces[0] += pieces[k]

def count(board):
    for k in board:
        currentPieces.setdefault(board[k],0)
        currentPieces[board[k]] += 1

def isValidChessboard(currentPieces,bpieces,wpieces):
        sumPieces(currentPieces)
        if currentPieces['bk'] != 1 or currentPieces['wk'] != 1:
            print('More than 1 king of a colour detected, board is not valid.')
        if 'wp' in currentPieces:
            if currentPieces['wp'] > 8:
                print('More than 8 white pawns detected, board is not valid.')
        if 'bp' in currentPieces:
            if currentPieces['bp'] > 8:
                print('More than 8 white pawns detected, board is not valid.')
        if wpieces[0] > 16 or bpieces[0] > 16:
            print('More pieces of a colour detected, board is not valid.')
        else:
            print('Chessboard is valid')

chessboard = {'2a':'bp', '2b': 'bp', '2c':'bp', '2d': 'bp', '2e': 'bp',\
         '2f': 'bp', '2g': 'bp', '2h': 'bp',\
         '1a': 'br', '1b': 'bn', '1c': 'bb', '1d': 'bq', \
         '1e':'bk', '1f': 'br', '1g': 'bn', '1h': 'bb', \
         '3a': 'bq', '7b': 'wk', '7c': 'wq'}
         
count(chessboard)
isValidChessboard(currentPieces,bpieces,wpieces)
